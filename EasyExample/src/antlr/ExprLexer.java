// Generated from Expr.g4 by ANTLR 4.9.2

package antlr;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class ExprLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.9.2", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, TRAIN=21, ACTFUNC=22, ARRAY=23, NEURALNETWORK=24, 
		SETUP=25, DATASET=26, ADDDATA=27, READDATA=28, PREDICT=29, OR=30, AND=31, 
		EQ=32, NEQ=33, GT=34, LT=35, GTEQ=36, LTEQ=37, BOOL=38, INT=39, DOUBLE=40, 
		ID=41, STRING=42, INT_TYPE=43, COMMENT=44, NEWLINE=45, WS=46;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
			"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
			"T__17", "T__18", "T__19", "TRAIN", "ACTFUNC", "ARRAY", "NEURALNETWORK", 
			"SETUP", "DATASET", "ADDDATA", "READDATA", "PREDICT", "OR", "AND", "EQ", 
			"NEQ", "GT", "LT", "GTEQ", "LTEQ", "BOOL", "INT", "DOUBLE", "ID", "STRING", 
			"INT_TYPE", "COMMENT", "NEWLINE", "WS"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'='", "';'", "'if'", "'else if'", "'else'", "'('", "','", "')'", 
			"'.'", "'{'", "'}'", "'while'", "'['", "']'", "'*'", "'/'", "'+'", "'-'", 
			"'Print'", "'read'", "'train'", null, null, "'NeuralNetwork'", null, 
			null, null, null, null, "'||'", "'&&'", "'=='", "'!='", "'>'", "'<'", 
			"'>='", "'<='", null, null, null, null, null, "'INT'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, null, "TRAIN", "ACTFUNC", 
			"ARRAY", "NEURALNETWORK", "SETUP", "DATASET", "ADDDATA", "READDATA", 
			"PREDICT", "OR", "AND", "EQ", "NEQ", "GT", "LT", "GTEQ", "LTEQ", "BOOL", 
			"INT", "DOUBLE", "ID", "STRING", "INT_TYPE", "COMMENT", "NEWLINE", "WS"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public ExprLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Expr.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2\60\u01a9\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\3\2\3\2\3\3\3\3\3\4\3\4\3\4\3\5\3\5\3\5\3\5"+
		"\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t\3\n\3\n\3"+
		"\13\3\13\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\17\3\17\3\20\3\20"+
		"\3\21\3\21\3\22\3\22\3\23\3\23\3\24\3\24\3\24\3\24\3\24\3\24\3\25\3\25"+
		"\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\27"+
		"\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27"+
		"\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27"+
		"\3\27\3\27\3\27\3\27\3\27\3\27\3\27\5\27\u00cb\n\27\3\30\3\30\3\30\3\30"+
		"\3\30\3\30\3\30\3\30\3\30\3\30\5\30\u00d7\n\30\3\31\3\31\3\31\3\31\3\31"+
		"\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\32\3\32\3\32\3\32\3\32"+
		"\3\32\3\32\3\32\3\32\3\32\5\32\u00f1\n\32\3\33\3\33\3\33\3\33\3\33\3\33"+
		"\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\5\33\u0101\n\33\3\34\3\34\3\34"+
		"\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\5\34\u0111\n\34"+
		"\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35"+
		"\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\5\35\u012b\n\35\3\36"+
		"\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\5\36"+
		"\u013b\n\36\3\37\3\37\3\37\3 \3 \3 \3!\3!\3!\3\"\3\"\3\"\3#\3#\3$\3$\3"+
		"%\3%\3%\3&\3&\3&\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\5\'\u015c\n\'\3("+
		"\3(\5(\u0160\n(\3(\3(\7(\u0164\n(\f(\16(\u0167\13(\5(\u0169\n(\3)\6)\u016c"+
		"\n)\r)\16)\u016d\3)\3)\7)\u0172\n)\f)\16)\u0175\13)\3)\3)\6)\u0179\n)"+
		"\r)\16)\u017a\5)\u017d\n)\3*\7*\u0180\n*\f*\16*\u0183\13*\3+\3+\3+\3+"+
		"\7+\u0189\n+\f+\16+\u018c\13+\3+\3+\3,\3,\3,\3,\3-\3-\3-\3-\7-\u0198\n"+
		"-\f-\16-\u019b\13-\3-\3-\3.\3.\3.\3.\3/\6/\u01a4\n/\r/\16/\u01a5\3/\3"+
		"/\2\2\60\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17"+
		"\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\35"+
		"9\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60\3\2\b\3\2\63;\3\2\62;\4"+
		"\2C\\c|\5\2\f\f\17\17$$\4\2\f\f\17\17\4\2\13\f\"\"\2\u01c2\2\3\3\2\2\2"+
		"\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2"+
		"\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2"+
		"\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2"+
		"\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2"+
		"\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2"+
		"\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2"+
		"\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W"+
		"\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\3_\3\2\2\2\5a\3\2\2\2\7c\3\2"+
		"\2\2\tf\3\2\2\2\13n\3\2\2\2\rs\3\2\2\2\17u\3\2\2\2\21w\3\2\2\2\23y\3\2"+
		"\2\2\25{\3\2\2\2\27}\3\2\2\2\31\177\3\2\2\2\33\u0085\3\2\2\2\35\u0087"+
		"\3\2\2\2\37\u0089\3\2\2\2!\u008b\3\2\2\2#\u008d\3\2\2\2%\u008f\3\2\2\2"+
		"\'\u0091\3\2\2\2)\u0097\3\2\2\2+\u009c\3\2\2\2-\u00ca\3\2\2\2/\u00d6\3"+
		"\2\2\2\61\u00d8\3\2\2\2\63\u00f0\3\2\2\2\65\u0100\3\2\2\2\67\u0110\3\2"+
		"\2\29\u012a\3\2\2\2;\u013a\3\2\2\2=\u013c\3\2\2\2?\u013f\3\2\2\2A\u0142"+
		"\3\2\2\2C\u0145\3\2\2\2E\u0148\3\2\2\2G\u014a\3\2\2\2I\u014c\3\2\2\2K"+
		"\u014f\3\2\2\2M\u015b\3\2\2\2O\u0168\3\2\2\2Q\u017c\3\2\2\2S\u0181\3\2"+
		"\2\2U\u0184\3\2\2\2W\u018f\3\2\2\2Y\u0193\3\2\2\2[\u019e\3\2\2\2]\u01a3"+
		"\3\2\2\2_`\7?\2\2`\4\3\2\2\2ab\7=\2\2b\6\3\2\2\2cd\7k\2\2de\7h\2\2e\b"+
		"\3\2\2\2fg\7g\2\2gh\7n\2\2hi\7u\2\2ij\7g\2\2jk\7\"\2\2kl\7k\2\2lm\7h\2"+
		"\2m\n\3\2\2\2no\7g\2\2op\7n\2\2pq\7u\2\2qr\7g\2\2r\f\3\2\2\2st\7*\2\2"+
		"t\16\3\2\2\2uv\7.\2\2v\20\3\2\2\2wx\7+\2\2x\22\3\2\2\2yz\7\60\2\2z\24"+
		"\3\2\2\2{|\7}\2\2|\26\3\2\2\2}~\7\177\2\2~\30\3\2\2\2\177\u0080\7y\2\2"+
		"\u0080\u0081\7j\2\2\u0081\u0082\7k\2\2\u0082\u0083\7n\2\2\u0083\u0084"+
		"\7g\2\2\u0084\32\3\2\2\2\u0085\u0086\7]\2\2\u0086\34\3\2\2\2\u0087\u0088"+
		"\7_\2\2\u0088\36\3\2\2\2\u0089\u008a\7,\2\2\u008a \3\2\2\2\u008b\u008c"+
		"\7\61\2\2\u008c\"\3\2\2\2\u008d\u008e\7-\2\2\u008e$\3\2\2\2\u008f\u0090"+
		"\7/\2\2\u0090&\3\2\2\2\u0091\u0092\7R\2\2\u0092\u0093\7t\2\2\u0093\u0094"+
		"\7k\2\2\u0094\u0095\7p\2\2\u0095\u0096\7v\2\2\u0096(\3\2\2\2\u0097\u0098"+
		"\7t\2\2\u0098\u0099\7g\2\2\u0099\u009a\7c\2\2\u009a\u009b\7f\2\2\u009b"+
		"*\3\2\2\2\u009c\u009d\7v\2\2\u009d\u009e\7t\2\2\u009e\u009f\7c\2\2\u009f"+
		"\u00a0\7k\2\2\u00a0\u00a1\7p\2\2\u00a1,\3\2\2\2\u00a2\u00a3\7u\2\2\u00a3"+
		"\u00a4\7k\2\2\u00a4\u00a5\7i\2\2\u00a5\u00a6\7o\2\2\u00a6\u00a7\7q\2\2"+
		"\u00a7\u00a8\7k\2\2\u00a8\u00cb\7f\2\2\u00a9\u00aa\7U\2\2\u00aa\u00ab"+
		"\7k\2\2\u00ab\u00ac\7i\2\2\u00ac\u00ad\7o\2\2\u00ad\u00ae\7q\2\2\u00ae"+
		"\u00af\7k\2\2\u00af\u00cb\7f\2\2\u00b0\u00b1\7U\2\2\u00b1\u00b2\7q\2\2"+
		"\u00b2\u00b3\7h\2\2\u00b3\u00b4\7v\2\2\u00b4\u00b5\7o\2\2\u00b5\u00b6"+
		"\7c\2\2\u00b6\u00cb\7z\2\2\u00b7\u00b8\7U\2\2\u00b8\u00b9\7q\2\2\u00b9"+
		"\u00ba\7h\2\2\u00ba\u00bb\7v\2\2\u00bb\u00bc\7O\2\2\u00bc\u00bd\7c\2\2"+
		"\u00bd\u00cb\7z\2\2\u00be\u00bf\7t\2\2\u00bf\u00c0\7g\2\2\u00c0\u00c1"+
		"\7n\2\2\u00c1\u00cb\7w\2\2\u00c2\u00c3\7T\2\2\u00c3\u00c4\7g\2\2\u00c4"+
		"\u00c5\7n\2\2\u00c5\u00cb\7w\2\2\u00c6\u00c7\7T\2\2\u00c7\u00c8\7g\2\2"+
		"\u00c8\u00c9\7N\2\2\u00c9\u00cb\7w\2\2\u00ca\u00a2\3\2\2\2\u00ca\u00a9"+
		"\3\2\2\2\u00ca\u00b0\3\2\2\2\u00ca\u00b7\3\2\2\2\u00ca\u00be\3\2\2\2\u00ca"+
		"\u00c2\3\2\2\2\u00ca\u00c6\3\2\2\2\u00cb.\3\2\2\2\u00cc\u00cd\7c\2\2\u00cd"+
		"\u00ce\7t\2\2\u00ce\u00cf\7t\2\2\u00cf\u00d0\7c\2\2\u00d0\u00d7\7{\2\2"+
		"\u00d1\u00d2\7C\2\2\u00d2\u00d3\7t\2\2\u00d3\u00d4\7t\2\2\u00d4\u00d5"+
		"\7c\2\2\u00d5\u00d7\7{\2\2\u00d6\u00cc\3\2\2\2\u00d6\u00d1\3\2\2\2\u00d7"+
		"\60\3\2\2\2\u00d8\u00d9\7P\2\2\u00d9\u00da\7g\2\2\u00da\u00db\7w\2\2\u00db"+
		"\u00dc\7t\2\2\u00dc\u00dd\7c\2\2\u00dd\u00de\7n\2\2\u00de\u00df\7P\2\2"+
		"\u00df\u00e0\7g\2\2\u00e0\u00e1\7v\2\2\u00e1\u00e2\7y\2\2\u00e2\u00e3"+
		"\7q\2\2\u00e3\u00e4\7t\2\2\u00e4\u00e5\7m\2\2\u00e5\62\3\2\2\2\u00e6\u00e7"+
		"\7U\2\2\u00e7\u00e8\7g\2\2\u00e8\u00e9\7v\2\2\u00e9\u00ea\7w\2\2\u00ea"+
		"\u00f1\7r\2\2\u00eb\u00ec\7u\2\2\u00ec\u00ed\7g\2\2\u00ed\u00ee\7v\2\2"+
		"\u00ee\u00ef\7w\2\2\u00ef\u00f1\7r\2\2\u00f0\u00e6\3\2\2\2\u00f0\u00eb"+
		"\3\2\2\2\u00f1\64\3\2\2\2\u00f2\u00f3\7F\2\2\u00f3\u00f4\7c\2\2\u00f4"+
		"\u00f5\7v\2\2\u00f5\u00f6\7c\2\2\u00f6\u00f7\7u\2\2\u00f7\u00f8\7g\2\2"+
		"\u00f8\u0101\7v\2\2\u00f9\u00fa\7f\2\2\u00fa\u00fb\7c\2\2\u00fb\u00fc"+
		"\7v\2\2\u00fc\u00fd\7c\2\2\u00fd\u00fe\7u\2\2\u00fe\u00ff\7g\2\2\u00ff"+
		"\u0101\7v\2\2\u0100\u00f2\3\2\2\2\u0100\u00f9\3\2\2\2\u0101\66\3\2\2\2"+
		"\u0102\u0103\7C\2\2\u0103\u0104\7f\2\2\u0104\u0105\7f\2\2\u0105\u0106"+
		"\7F\2\2\u0106\u0107\7c\2\2\u0107\u0108\7v\2\2\u0108\u0111\7c\2\2\u0109"+
		"\u010a\7c\2\2\u010a\u010b\7f\2\2\u010b\u010c\7f\2\2\u010c\u010d\7F\2\2"+
		"\u010d\u010e\7c\2\2\u010e\u010f\7v\2\2\u010f\u0111\7c\2\2\u0110\u0102"+
		"\3\2\2\2\u0110\u0109\3\2\2\2\u01118\3\2\2\2\u0112\u0113\7T\2\2\u0113\u0114"+
		"\7g\2\2\u0114\u0115\7c\2\2\u0115\u0116\7f\2\2\u0116\u0117\7F\2\2\u0117"+
		"\u0118\7c\2\2\u0118\u0119\7v\2\2\u0119\u012b\7c\2\2\u011a\u011b\7T\2\2"+
		"\u011b\u011c\7g\2\2\u011c\u011d\7c\2\2\u011d\u011e\7f\2\2\u011e\u011f"+
		"\7f\2\2\u011f\u0120\7c\2\2\u0120\u0121\7v\2\2\u0121\u012b\7c\2\2\u0122"+
		"\u0123\7t\2\2\u0123\u0124\7g\2\2\u0124\u0125\7c\2\2\u0125\u0126\7f\2\2"+
		"\u0126\u0127\7f\2\2\u0127\u0128\7c\2\2\u0128\u0129\7v\2\2\u0129\u012b"+
		"\7c\2\2\u012a\u0112\3\2\2\2\u012a\u011a\3\2\2\2\u012a\u0122\3\2\2\2\u012b"+
		":\3\2\2\2\u012c\u012d\7r\2\2\u012d\u012e\7t\2\2\u012e\u012f\7g\2\2\u012f"+
		"\u0130\7f\2\2\u0130\u0131\7k\2\2\u0131\u0132\7e\2\2\u0132\u013b\7v\2\2"+
		"\u0133\u0134\7R\2\2\u0134\u0135\7t\2\2\u0135\u0136\7g\2\2\u0136\u0137"+
		"\7f\2\2\u0137\u0138\7k\2\2\u0138\u0139\7e\2\2\u0139\u013b\7v\2\2\u013a"+
		"\u012c\3\2\2\2\u013a\u0133\3\2\2\2\u013b<\3\2\2\2\u013c\u013d\7~\2\2\u013d"+
		"\u013e\7~\2\2\u013e>\3\2\2\2\u013f\u0140\7(\2\2\u0140\u0141\7(\2\2\u0141"+
		"@\3\2\2\2\u0142\u0143\7?\2\2\u0143\u0144\7?\2\2\u0144B\3\2\2\2\u0145\u0146"+
		"\7#\2\2\u0146\u0147\7?\2\2\u0147D\3\2\2\2\u0148\u0149\7@\2\2\u0149F\3"+
		"\2\2\2\u014a\u014b\7>\2\2\u014bH\3\2\2\2\u014c\u014d\7@\2\2\u014d\u014e"+
		"\7?\2\2\u014eJ\3\2\2\2\u014f\u0150\7>\2\2\u0150\u0151\7?\2\2\u0151L\3"+
		"\2\2\2\u0152\u0153\7v\2\2\u0153\u0154\7t\2\2\u0154\u0155\7w\2\2\u0155"+
		"\u015c\7g\2\2\u0156\u0157\7h\2\2\u0157\u0158\7c\2\2\u0158\u0159\7n\2\2"+
		"\u0159\u015a\7u\2\2\u015a\u015c\7g\2\2\u015b\u0152\3\2\2\2\u015b\u0156"+
		"\3\2\2\2\u015cN\3\2\2\2\u015d\u0169\7\62\2\2\u015e\u0160\7/\2\2\u015f"+
		"\u015e\3\2\2\2\u015f\u0160\3\2\2\2\u0160\u0161\3\2\2\2\u0161\u0165\t\2"+
		"\2\2\u0162\u0164\t\3\2\2\u0163\u0162\3\2\2\2\u0164\u0167\3\2\2\2\u0165"+
		"\u0163\3\2\2\2\u0165\u0166\3\2\2\2\u0166\u0169\3\2\2\2\u0167\u0165\3\2"+
		"\2\2\u0168\u015d\3\2\2\2\u0168\u015f\3\2\2\2\u0169P\3\2\2\2\u016a\u016c"+
		"\t\3\2\2\u016b\u016a\3\2\2\2\u016c\u016d\3\2\2\2\u016d\u016b\3\2\2\2\u016d"+
		"\u016e\3\2\2\2\u016e\u016f\3\2\2\2\u016f\u0173\7\60\2\2\u0170\u0172\t"+
		"\3\2\2\u0171\u0170\3\2\2\2\u0172\u0175\3\2\2\2\u0173\u0171\3\2\2\2\u0173"+
		"\u0174\3\2\2\2\u0174\u017d\3\2\2\2\u0175\u0173\3\2\2\2\u0176\u0178\7\60"+
		"\2\2\u0177\u0179\t\3\2\2\u0178\u0177\3\2\2\2\u0179\u017a\3\2\2\2\u017a"+
		"\u0178\3\2\2\2\u017a\u017b\3\2\2\2\u017b\u017d\3\2\2\2\u017c\u016b\3\2"+
		"\2\2\u017c\u0176\3\2\2\2\u017dR\3\2\2\2\u017e\u0180\t\4\2\2\u017f\u017e"+
		"\3\2\2\2\u0180\u0183\3\2\2\2\u0181\u017f\3\2\2\2\u0181\u0182\3\2\2\2\u0182"+
		"T\3\2\2\2\u0183\u0181\3\2\2\2\u0184\u018a\7$\2\2\u0185\u0189\n\5\2\2\u0186"+
		"\u0187\7$\2\2\u0187\u0189\7$\2\2\u0188\u0185\3\2\2\2\u0188\u0186\3\2\2"+
		"\2\u0189\u018c\3\2\2\2\u018a\u0188\3\2\2\2\u018a\u018b\3\2\2\2\u018b\u018d"+
		"\3\2\2\2\u018c\u018a\3\2\2\2\u018d\u018e\7$\2\2\u018eV\3\2\2\2\u018f\u0190"+
		"\7K\2\2\u0190\u0191\7P\2\2\u0191\u0192\7V\2\2\u0192X\3\2\2\2\u0193\u0194"+
		"\7/\2\2\u0194\u0195\7/\2\2\u0195\u0199\3\2\2\2\u0196\u0198\n\6\2\2\u0197"+
		"\u0196\3\2\2\2\u0198\u019b\3\2\2\2\u0199\u0197\3\2\2\2\u0199\u019a\3\2"+
		"\2\2\u019a\u019c\3\2\2\2\u019b\u0199\3\2\2\2\u019c\u019d\b-\2\2\u019d"+
		"Z\3\2\2\2\u019e\u019f\t\6\2\2\u019f\u01a0\3\2\2\2\u01a0\u01a1\b.\2\2\u01a1"+
		"\\\3\2\2\2\u01a2\u01a4\t\7\2\2\u01a3\u01a2\3\2\2\2\u01a4\u01a5\3\2\2\2"+
		"\u01a5\u01a3\3\2\2\2\u01a5\u01a6\3\2\2\2\u01a6\u01a7\3\2\2\2\u01a7\u01a8"+
		"\b/\2\2\u01a8^\3\2\2\2\27\2\u00ca\u00d6\u00f0\u0100\u0110\u012a\u013a"+
		"\u015b\u015f\u0165\u0168\u016d\u0173\u017a\u017c\u0181\u0188\u018a\u0199"+
		"\u01a5\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}